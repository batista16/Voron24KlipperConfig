
[mcu EBBSpicy]
canbus_uuid: 688255e1d011

[temperature_sensor EBBSpicy_temp]
sensor_type: temperature_mcu
sensor_mcu: EBBSpicy
min_temp: 0
max_temp: 100

[heater_generic HC]
sensor_type: Generic 3950 #NTC 100K MGB18-104F39050L32
sensor_pin: PF6 #A Drive chamber thermistor
gcode_id: HC
heater_pin: PA3
min_temp: 0
max_temp: 130
control: pid
pid_Kp: 70.184
pid_Ki: 0.376
pid_Kd: 3274.071

[controller_fan HC_fan1]
pin: EBBSpicy:PA0
tachometer_pin: ^EBBSpicy:PB5
heater: HC
idle_timeout: 60
shutdown_speed: 1.0
stepper:

[controller_fan HC_fan2]
pin: EBBSpicy:PA1
tachometer_pin: ^EBBSpicy:PB7
heater: HC
idle_timeout: 60
shutdown_speed: 1.0
stepper:

[verify_heater HC]
max_error = 1000
heating_gain = 0.01
check_gain_time = 1200
hysteresis = 10

# Need to check wiring, giving toubl
[temperature_sensor CH_Core]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBSpicy:PA3
min_temp: -273.15
max_temp: 160

[temperature_sensor CT_TopHat]
sensor_type:MAX31865
sensor_pin: EBBSpicy:PA4
spi_bus: spi1
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2
rtd_use_50Hz_filter: True

[temperature_sensor Chamber_Average]
sensor_type: temperature_combined
sensor_list: heater_generic HC, temperature_sensor CT_MidPost, temperature_sensor CT_TopHat
combination_method: mean
maximum_deviation: 999.9

#for orcaslicer integration below https://github.com/SoftFever/OrcaSlicer/wiki/Chamber-temperature
[gcode_macro M141]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_chamber TARGET={params.S|default(0)} #HEATER=chamber_heater

[gcode_macro M191]
gcode:
    {% set s = params.S|float %}
    {% if s == 0 %}
        # If target temperature is 0, do nothing
        M117 Chamber heating cancelled
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=HC TARGET={s}
        # Orca: uncomment the following line if you want to use heat bed to assist chamber heating
        M140 S110 #was uncommented. Was S100. Heats bed and doesnt wait
        TEMPERATURE_WAIT SENSOR="heater_generic HC" MINIMUM={s-2} MAXIMUM={s+15} #was s-1
        M117 Chamber at target temperature
    {% endif %}