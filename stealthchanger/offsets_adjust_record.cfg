#####################################################################
#                        Hidden
#####################################################################
#--------------------------------------------------------------------
[gcode_macro _CURRENT_OFFSET]
variable_xg: 0.0
variable_yg: 0.0
variable_zg: 0.0
gcode:
    RESPOND TYPE=echo MSG="z offset = {zg} mm"
    RESPOND TYPE=echo MSG="y offset = {yg} mm"
    RESPOND TYPE=echo MSG="x offset = {xg} mm"

#--------------------------------------------------------------------
[gcode_macro _RECORD]
variable_xa: 999.9
variable_ya: 999.9
variable_za: 999.9
variable_xr: 0.0
variable_yr: 0.0
variable_zr: 0.0
gcode:
    {% set names = printer.toolchanger.tool_names %}
    {% set xg = printer["gcode_macro _CURRENT_OFFSET"].xg|float %}
    {% set yg = printer["gcode_macro _CURRENT_OFFSET"].yg|float %}
    {% set zg = printer["gcode_macro _CURRENT_OFFSET"].zg|float %}

    ## Record relative offsets steps
    {% if xr != 0.0 %}
        SET_GCODE_VARIABLE MACRO=_CURRENT_OFFSET  VARIABLE=xg  VALUE={ xr + printer["gcode_macro _CURRENT_OFFSET"].xg|float }
    {% endif %}
    {% if yr != 0.0 %}
        SET_GCODE_VARIABLE MACRO=_CURRENT_OFFSET  VARIABLE=yg  VALUE={ yr + printer["gcode_macro _CURRENT_OFFSET"].yg|float }
    {% endif %}
    {% if zr != 0.0 %}
        SET_GCODE_VARIABLE MACRO=_CURRENT_OFFSET  VARIABLE=zg  VALUE={ zr + printer["gcode_macro _CURRENT_OFFSET"].zg|float }
    {% endif %}
    M400

    ## Overwrite the current offset with absolute offset, only if it is to reset the offset.
    {% if xa == 0.0 %}
        SET_GCODE_VARIABLE MACRO=_CURRENT_OFFSET  VARIABLE=xg  VALUE={ xa|float }
    {% endif %}
    {% if ya == 0.0 %}
        SET_GCODE_VARIABLE MACRO=_CURRENT_OFFSET  VARIABLE=yg  VALUE={ ya|float }
    {% endif %}
    {% if za == 0.0 %}
        SET_GCODE_VARIABLE MACRO=_CURRENT_OFFSET  VARIABLE=zg  VALUE={ za|float }
    {% endif %}
    M400

#####################################################################
#                        Working
#####################################################################
# #--------------------------------------------------------------------
# [gcode_macro Z_OFFSET_APPLY_PROBE]
# rename_existing: _Z_OFFSET_APPLY_PROBE
# gcode:
#     _Z_OFFSET_APPLY_PROBE
    
#--------------------------------------------------------------------
[gcode_macro SAVE_CONFIG]
rename_existing: _SAVE_CONFIG
gcode:
    {% set zg = printer["gcode_macro _CURRENT_OFFSET"].zg|float %}
    {% if zg != 0.0 %}
        SAVE_BABYSTEPS OFFSET={zg}
    {% endif %}
    _SAVE_CONFIG

#--------------------------------------------------------------------
[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
description: [X=<pos>|X_ADJUST=<adjust>] [Y=<pos>|Y_ADJUST=<adjust>] [Z=<pos>|Z_ADJUST=<adjust>] [MOVE=<0/1>] [MOVE_SPEED=<speed>]
gcode:
    ## Variable
    {% set newparameters = "" %}
    ## Absolute X
    {% if params.X is defined %}
        SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=xa VALUE={params.X}
        {% set newparameters = newparameters ~ " X="~params.X %}
    {% endif %}
    ## Relative X
    {% if params.X_ADJUST is defined %}
        SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=xr VALUE={params.X_ADJUST}
        {% set newparameters = newparameters ~ " X_ADJUST="~params.X_ADJUST %}
    {% endif %}
    
    ## Absolute Y
    {% if params.Y is defined %}
        SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=ya VALUE={params.Y}
        {% set newparameters = newparameters ~ " Y="~params.Y %}
    {% endif %}
    ## Relative Y
    {% if params.Y_ADJUST is defined %}
        SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=yr VALUE={params.Y_ADJUST}
        {% set newparameters = newparameters ~ " Y_ADJUST="~params.Y_ADJUST %}
    {% endif %}

    ## Absolute Z
    {% if params.Z is defined %}
        SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=za VALUE={params.Z}
        {% set newparameters = newparameters ~ " Z="~params.Z %}
    {% endif %}
    ## Relative Z
    {% if params.Z_ADJUST is defined %}
        SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=zr VALUE={params.Z_ADJUST}
        {% set newparameters = newparameters ~ " Z_ADJUST="~params.Z_ADJUST %}
    {% endif %}

    ## Adjust now or with the next move
    {% if params.MOVE is defined %}
        {% set newparameters = newparameters ~ " MOVE="~params.MOVE %}
    {% endif %}
    {% if params.MOVE_SPEED is defined %}
        {% set newparameters = newparameters ~ " MOVE_SPEED="~params.MOVE_SPEED %}
    {% endif %}
    
    ## Run command as normal
    _SET_GCODE_OFFSET { newparameters }
    
    ## Record the offsets
    _RECORD
    
    ## Reset recorder values
    SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=xa VALUE=999.9
    SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=ya VALUE=999.9
    SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=za VALUE=999.9
    SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=xr VALUE=0.0
    SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=yr VALUE=0.0
    SET_GCODE_VARIABLE MACRO=_RECORD VARIABLE=zr VALUE=0.0
