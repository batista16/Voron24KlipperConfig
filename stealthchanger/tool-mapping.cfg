[save_variables]
filename: ~/printer_data/config/variables.cfg

[gcode_macro T0]
variable_tool: 0
variable_spool_id: None
variable_pressure_advance: None
gcode:
  {% if pressure_advance != None %}
    SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  {% endif %}
  SELECT_TOOL T={tool}

[gcode_macro T1]
variable_tool: 1
variable_spool_id: None
variable_pressure_advance: None
gcode:
  {% if pressure_advance != None %}
    SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  {% endif %}
  SELECT_TOOL T={tool}
  
[gcode_macro SET_TOOL_MAPPING]
description: [T<number>] [TOOL<number>]
  Set tool mapping.
  T= T command number
  TOOL= Physical tool number
gcode:
  {% if params.T is defined and params.TOOL is defined %}
    SET_GCODE_VARIABLE MACRO=T{params.T} VARIABLE=tool VALUE={params.TOOL}
  {% else %}
    {action_raise_error("Specify T and TOOL parameters.")}
  {% endif %}

[gcode_macro RESET_TOOL_MAPPING]
description: Reset tool mapping.
gcode:
  {% for tn in range(printer.toolchanger.tool_names | length) %}
    SET_TOOL_MAPPING T={tn} TOOL={tn}
  {% endfor %}

[gcode_macro SET_TOOL_COLOR]
description: [T<number>] [COLOR<hexstring>]
  Set tool's filament color.
  TOOL= Physical tool number
  COLOR= RGB hex string
gcode:
  {% if params.TOOL is defined and params.COLOR is defined %} 
    {% set tool = params.TOOL|int %}
    {% set color = params.COLOR|string %}
    
    {% if printer.save_variables.variables.filament_colors is defined %}
        {% set filament_colors = printer.save_variables.variables.filament_colors %}        
        {% if tool >= 0 and tool < filament_colors|length %}
            {% set filament_colors = filament_colors[:tool] + [color] + filament_colors[tool+1:] %}
            SAVE_VARIABLE VARIABLE=filament_colors VALUE='{filament_colors | tojson}'
        {% else %}
            {action_raise_error("Tool number out of range.")}
        {% endif %}
    {% else %}
        {action_raise_error("Filament colors variable not found.")}
    {% endif %}
  {% else %}
    {action_raise_error("Specify TOOL and COLOR parameters.")}
  {% endif %}

[gcode_macro SET_TOOL_MATERIAL]
description: [T<number>] [MATERIAL<string>]
  Set tool's filament material.
  TOOL= Physical tool number
  MATERIAL= string, e.g. PLA, ABS, ...
gcode:
  {% if params.TOOL is defined and params.MATERIAL is defined %} 
    {% set tool = params.TOOL|int %}
    {% set material = params.MATERIAL|string %}
    
    {% if printer.save_variables.variables.filament_types is defined %}
        {% set filament_types = printer.save_variables.variables.filament_types %}        
        {% if tool >= 0 and tool < filament_types|length %}
            {% set filament_types = filament_types[:tool] + [material] + filament_types[tool+1:] %}
            SAVE_VARIABLE VARIABLE=filament_types VALUE='{filament_types | tojson}'
        {% else %}
            {action_raise_error("Tool number out of range.")}
        {% endif %}
    {% else %}
        {action_raise_error("Filament types variable not found.")}
    {% endif %}
  {% else %}
    {action_raise_error("Specify TOOL and MATERIAL parameters.")}
  {% endif %}

[gcode_macro SET_TOOL_PRESSURE_ADVANCE]
description: [TOOL<number>] [ADVANCE<number>]
  Set tool pressure advance.
  TOOL= Physical tool number
gcode:
  {% if params.T is defined and params.TOOL is defined %}
    SET_GCODE_VARIABLE MACRO=T{params.T} VARIABLE=tool VALUE={params.TOOL}
  {% else %}
    {action_raise_error("Specify T and TOOL parameters.")}
  {% endif %}
  
[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set target_tool = printer["gcode_macro T"~params.T].tool %}
    {% set newparameters = " T="~target_tool %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE {newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>] [D<Deadband>]
  Set tool temperature and wait.
  T= Tool number [optional]. If this parameter is not provided, the current tool is used.
  S= Target temperature
  D= Dead-band, allows the temperature variance +/- the deadband
variable_default_deadband: 4.0
gcode:
    {% set s = params.S|float %}
    {% set deadband = default_deadband|float %}
    {% set tn = printer.tool_probe_endstop.active_tool_number|int %}
    {% if params.D is defined %}
        {% set deadband = params.D|float %}
    {% endif %}
    {% if params.T is defined %}
        {% set tn = printer["gcode_macro T"~params.T].tool %}
    {% endif %}
    {% set tool_name = printer.toolchanger.tool_names[tn]|default('') %}
    {% set extruder = printer[tool_name].extruder %}

    SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={s}
    {% if s > 0 %}
        TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={s-(deadband/2)} MAXIMUM={s+(deadband/2)}   ; Wait for hotend temp (within D degrees)
    {% endif %}
