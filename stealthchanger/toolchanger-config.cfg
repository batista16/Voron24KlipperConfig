# THIS IS NOT AN EXHAUSTIVE LIST!
# use this file to override values in the other configs. 
# any value that is available in the configs can be overriden here
# just add the section ie: [tool_probe T0] and the value that is being overridden.  

# this file must be the last file to be included since values will be stored in the order they are
# received.  Klipper will take the last value and store that for the macros. 

[rounded_path]
resolution: 0.2 # the length of a circle approximation segments.
replace_g0: False # Use at your own risk

[force_move]
enable_force_move: True

# z_offset can be stored here for easier retrieval vs in T0.cfg.
#[tool_probe T0]
#z_offset = -1.170 # TEXTURED PLATE

[toolchanger]
params_safe_y: 120
params_close_y: 33
params_fast_speed: 25000 # Go as fast as we can
params_path_speed: 1800  # slower on the path
pickup_gcode:
  {% set x = tool.params_park_x|float %}
  {% set y = tool.params_park_y|float %}
  {% set z = tool.params_park_z|float %}
  {% set fast = tool.params_fast_speed|float %}
  {% set path = tool.params_pickup_path %}
  RESPOND TYPE=echo MSG='Picking up {tool.name}'
  G90
  #   ##############  Fast to the last point  ##############
  ROUNDED_G0 Y={tool.params_close_y} F={fast} D=5
  ROUNDED_G0 X={x} Z={z + path[0]['z']|float} F={fast} D=5
  ROUNDED_G0 Y={y + path[0]['y']|float} F={fast} D=0
  # Wait for temp before actually picking up the tool, while the nozzle is resting on it's pad.

  {% if tool.extruder %}
    M109 T{tool.tool_number} S{printer[tool.extruder].target|int}
  {% endif %}
  # Run the path
  {% for pos in path %}
    {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
    G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
    {% if 'verify' in pos %}
      _VERIFY_TOOL_DETECTED T={tool.tool_number}
    {% endif %}
  {% endfor %}
  # Restore the position with smooth rounded move.
  ROUNDED_G0 Y={tool.params_safe_y} F={fast} D=20
  {% if 'X' in restore_position %}
    ROUNDED_G0 X={restore_position.X} F={fast} D=1000
  {% endif %}
  {% if 'Y' in restore_position %}
    ROUNDED_G0 Y={restore_position.Y} F={fast} D=0
  {% endif %}  
  {% if 'Z' in restore_position %}
    ROUNDED_G0 Z={restore_position.Z} F={fast} D=150
  {% endif %}
  ROUNDED_G0 D=0


# this section must be completed
[gcode_macro homing_override_config]
variable_sensorless_x: True
variable_sensorless_y: True
variable_homing_rebound_y: 20 # for sensorless you probably want this set to 20.
variable_stepper_driver: "tmc2209"
variable_homing_current: 0.49

# M109 macro is overridden to allow some deadband on the temp
# default is +- 1 degree.  So if the set temp is 250 the the default
# deadband will be 249-251.  You can adjust this here:

[gcode_macro SET_TEMPERATURE_WITH_DEADBAND]
variable_default_deadband: 4.0

# uncomment this to automatically INITIALIZE_TOOLCHANGER
# when klipper starts. 
[delayed_gcode startup]
initial_duration: 1
gcode:
  INITIALIZE_TOOLCHANGER

# these values need to be set to match the location of your Calibration Switch
[gcode_macro _CALIBRATION_SWITCH]
variable_x: 78.618750
variable_y: 3.175000
variable_z: 6.395396
gcode:

[tools_calibrate]
pin: PG11 #pin that your calibration probe is connected to.
travel_speed: 20  # mms to travel sideways for XY probing
spread: 5  # mms to travel down from top for XY probing
lower_z: 1.0  # The speed (in mm/sec) to move tools down onto the probe
speed: 2  # The speed (in mm/sec) to retract between probes
lift_speed: 4  # Z Lift after probing done, should be greater than any Z variance between tools
final_lift_z: 6 
sample_retract_dist:2
samples_tolerance:0.5
samples:5
samples_result: median # median, average
# Settings for nozzle probe calibration - optional.
#probe: probe # name of the nozzle probe to use
#trigger_to_bottom_z: 0.25 # Offset from probe trigger to vertical motion bottoms out. 
# decrease if the nozzle is too high, increase if too low.
